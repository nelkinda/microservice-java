plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'name.remal.sonarlint' version '1.0.177'
    id 'org.sonarqube' version '2.8'
    id 'jacoco'
}

group = 'com.nelkinda.training'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    checkstyle 'com.puppycrawl.tools:checkstyle:8.30'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'org.junit.jupiter', module: 'junit-jupiter'
        exclude group: 'org.junit.platform', module: 'junit-platform-commons'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testImplementation 'org.junit.platform:junit-platform-commons:1.6.0'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.6.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:5.4.1'
    testImplementation 'io.cucumber:cucumber-junit:5.4.1'
    testImplementation 'io.cucumber:cucumber-java:5.4.1'
}

checkstyleMain {
    configFile = file("config/checkstyle/checkstyleMain.xml")
    maxWarnings = 0
}

checkstyleTest {
    configFile = file("config/checkstyle/checkstyleTest.xml")
    maxWarnings = 0
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

pmd {
    ruleSets = []
    consoleOutput = true
    dependencies {
        pmd 'net.sourceforge.pmd:pmd:6.21.0'
        pmd 'net.sourceforge.pmd:pmd-core:6.21.0'
        pmd 'net.sourceforge.pmd:pmd-java:6.21.0'
    }
}

pmdMain {
    ruleSetFiles = files("config/pmd/pmdMain.xml")
}

pmdTest {
    ruleSetFiles = files("config/pmd/pmdTest.xml")
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion "6.2.1"
    jarFile ".gradle/wrapper/gradle-wrapper.jar"
}
